apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "transaction-service.fullname" . }}
  labels:
    app: {{ include "transaction-service.name" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "transaction-service.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "transaction-service.name" . }}
    spec:
      initContainers:
        - name: wait-for-kafka
          image: busybox:1.35
          command: [ 'sh', '-c' ]
          args:
            - |
              echo "Waiting for Kafka..."
              while ! nc -z transaction-service-kafka-broker-headless.default.svc.cluster.local:9092; do
                sleep 5;
              done
              echo "Kafka jest gotowa!"
      containers:
      - name: transaction-service
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        volumeMounts:
            - name: h2-data
              mountPath: /data/db
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        resources: {{ toYaml .Values.resources | nindent 12 }}
        ports:
          - containerPort: 8080
        env:
          - name: BOOTSTRAP_SERVERS
            value: "{{ .Values.kafka.bootstrapServers }}"
          - name: SPRINGDOC_SWAGGER_UI_URL
            value: "http://{{ .Values.ingress.hostname }}/openapi/openapi.yaml"
          - name: SPRING_DATASOURCE_URL
            value: "jdbc:h2:file:/data/db/mydb;AUTO_SERVER=TRUE"
          - name: COMPLETED_TOPIC
            value: "{{ .Values.predefinedTopics.completed.name }}"
          - name: EXPIRED_TOPIC
            value: "{{ .Values.predefinedTopics.expired.name }}"
      volumes:
        - name: h2-data
          persistentVolumeClaim:
            claimName: {{ include "transaction-service.fullname" . }}-pvc
